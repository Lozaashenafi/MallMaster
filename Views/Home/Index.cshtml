@using Newtonsoft.Json
@model MallMinder.Models.ViewModels.RoomStatusVM

<div class="content-wrapper">
  <div class="page-header">
    <h3 class="page-title">Dashbord </h3>
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"></a></li>
        <li class="breadcrumb-item active" aria-current="page"></li>
      </ol>
    </nav>
  </div>
  <div class="row">
    <div class="col-xl-3 col-sm-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <div class="row">
            <div class="col-9">
              <div class="d-flex align-items-center align-self-start">
                <h3 class="mb-0">$@ViewBag.TotalProfit</h3>
                @* <p class="text-success ml-2 mb-0 font-weight-medium">
                +3.5%
                </p> *@
              </div>
            </div>
            <div class="col-3">
              <div class="icon icon-box-success">
                <span class="mdi mdi-arrow-top-right icon-item"></span>
              </div>
            </div>
          </div>
          <h6 class="text-muted font-weight-normal">
            Profit current
          </h6>
        </div>
      </div>
    </div>
    <div class="col-xl-3 col-sm-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <div class="row">
            <div class="col-9">
              <div class="d-flex align-items-center align-self-start">
                <h3 class="mb-0">$@ViewBag.TotalRevenue</h3>
                @* <p class="text-success ml-2 mb-0 font-weight-medium">
                +11%
                </p> *@
              </div>
            </div>
            <div class="col-3">
              <div class="icon icon-box-success">
                <span class="mdi mdi-arrow-top-right icon-item"></span>
              </div>
            </div>
          </div>
          <h6 class="text-muted font-weight-normal">
            Revenue current
          </h6>
        </div>
      </div>
    </div>
    <div class="col-xl-3 col-sm-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <div class="row">
            <div class="col-9">
              <div class="d-flex align-items-center align-self-start">
                <h3 class="mb-0">$@ViewBag.revenueForCurrentMonth</h3>
                @* <p class="text-danger ml-2 mb-0 font-weight-medium">
                -2.4%
                </p> *@
              </div>
            </div>
            <div class="col-3">
              <div class="icon icon-box-danger">
                <span class="mdi mdi-arrow-bottom-left icon-item"></span>
              </div>
            </div>
          </div>
          <h6 class="text-muted font-weight-normal">Monthly Income</h6>
        </div>
      </div>
    </div>
    <div class="col-xl-3 col-sm-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <div class="row">
            <div class="col-9">
              <div class="d-flex align-items-center align-self-start">
                <h3 class="mb-0">$@ViewBag.TotalExpense</h3>
                @* <p class="text-success ml-2 mb-0 font-weight-medium">
                +3.5%
                </p> *@
              </div>
            </div>
            <div class="col-3">
              <div class="icon icon-box-success">
                <span class="mdi mdi-arrow-top-right icon-item"></span>
              </div>
            </div>
          </div>
          <h6 class="text-muted font-weight-normal">
            Expense current
          </h6>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Room Status</h4>
          <canvas id="roomStatusChart"></canvas>
        </div>
      </div>
    </div>
    <div class="col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Maintenance</h4>
          <canvas id="maintenanceCostsChart"></canvas>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Profitability</h4>
          <canvas id="profitChart" style="height:250px"></canvas>
        </div>
      </div>
    </div>
    <div class=" col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Revenue by Year </h4>
          <canvas id="revenueBarChart" style="height:230px"></canvas>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Expense by Year</h4>
          <canvas id="expenseAreaChart" style="height:230px"></canvas>
        </div>
      </div>
    </div>
    <div class="col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Maintenance Cost by Year</h4>
          <canvas id="maintenanceChart" style="height:250px"></canvas>
        </div>
      </div>
    </div>
  </div>
  <script src="~/assets/js/misc.js"></script>
  <style>
    .size {
      height: 230px !important;
      margin: 0 auto;
    }
  </style>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script>
    $(document).ready(function () {
      // Convert the RoomStatus object to JSON and output it directly into the JavaScript variable
      var roomStatus = @Html.Raw(JsonConvert.SerializeObject(ViewBag.RoomStatus));
      console.log('Room status:', roomStatus);

      var doughnutPieData = {
        datasets: [{
          data: [roomStatus.Occupied, roomStatus.Free],
          backgroundColor: [
            'rgba(255, 99, 132, 0.5)',
            'rgba(54, 162, 235, 0.5)'
          ],
          borderColor: [
            'rgba(255,99,132,1)',
            'rgba(54, 162, 235, 1)'
          ],
        }],
        labels: [
          'Occupied',
          'Free'
        ]
      };

      var doughnutPieOptions = {
        responsive: true,
        animation: {
          animateScale: true,
          animateRotate: true
        }
      };

      var ctx = document.getElementById('roomStatusChart').getContext('2d');
      var roomStatusChart = new Chart(ctx, {
        type: 'pie',
        data: doughnutPieData,
        options: doughnutPieOptions
      });
    });
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Debug: Check if the JSON data is being parsed correctly
      var revenueData = JSON.parse('@Html.Raw(ViewBag.RevenueByYearJson)');
      console.log('Revenue Data:', revenueData);

      var labels = Object.keys(revenueData);
      var data = Object.values(revenueData);

      console.log('Labels:', labels);
      console.log('Data:', data);

      var ctx = document.getElementById('revenueBarChart').getContext('2d');
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: labels,
          datasets: [{
            label: 'Revenue',
            data: data,
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
              grid: {
                color: "rgba(204, 204, 204, 0.1)"
              }
            },
            x: {
              grid: {
                color: "rgba(204, 204, 204, 0.1)"
              }
            }
          },
          plugins: {
            legend: {
              display: true
            }
          }
        }
      });
    });
    // Expense Area Chart
    var expenseData = JSON.parse('@Html.Raw(ViewBag.ExpenseByYearJson)');
    var expenseLabels = Object.keys(expenseData);
    var expenseValues = Object.values(expenseData);

    var expenseAreaChart = new Chart(document.getElementById('expenseAreaChart').getContext('2d'), {
      type: 'line',
      data: {
        labels: expenseLabels,
        datasets: [{
          label: 'Expense',
          data: expenseValues,
          backgroundColor: 'rgba(255, 99, 132, 0.2)',
          borderColor: 'rgba(255, 99, 132, 1)',
          borderWidth: 1,
          fill: true
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
            grid: {
              color: "rgba(204, 204, 204, 0.1)"
            }
          },
          x: {
            grid: {
              color: "rgba(204, 204, 204, 0.1)"
            }
          }
        },
        plugins: {
          legend: {
            display: true
          }
        }
      }
    });
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Get the data from ViewBag
      var maintenanceByYearJson = '@Html.Raw(ViewBag.maintenanceByYearJson)';
      var maintenanceByYear = JSON.parse(maintenanceByYearJson);

      // Prepare data for the chart
      var labels = Object.keys(maintenanceByYear);
      var data = Object.values(maintenanceByYear);

      // Create the line chart
      var ctx = document.getElementById('maintenanceChart').getContext('2d');
      var maintenanceChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [{
            label: 'Maintenance Cost',
            data: data,
            borderColor: 'rgba(75, 192, 192, 1)',
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    });
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      var ctx = document.getElementById('profitChart').getContext('2d');

      var profitData = @Html.Raw(ViewBag.ProfitByYearJson);

      var data = {
        labels: Object.keys(profitData),
        datasets: [{
          label: 'Profit',
          data: Object.values(profitData),
          backgroundColor: 'rgba(54, 162, 235, 0.2)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 1,
          fill: false
        }]
      };

      var config = {
        type: 'line',
        data: data,
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      };

      var profitChart = new Chart(ctx, config);
    });
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      var maintenanceCostsCtx = document.getElementById('maintenanceCostsChart').getContext('2d');

      var maintenanceData = @Html.Raw(ViewBag.MaintenanceCostsAndTenantsJson);

      var maintenanceChartData = {
        labels: maintenanceData.map(item => item.TenantName),
        datasets: [{
          label: 'Maintenance Cost',
          data: maintenanceData.map(item => item.TotalCost),
          backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)'
          ],
          borderColor: [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
          ],
          borderWidth: 1
        }]
      };

      var maintenanceChartConfig = {
        type: 'doughnut',
        data: maintenanceChartData
      };

      var maintenanceChart = new Chart(maintenanceCostsCtx, maintenanceChartConfig);
    });
  </script>