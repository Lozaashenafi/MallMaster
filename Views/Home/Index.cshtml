@using Newtonsoft.Json
@model MallMinder.Models.ViewModels.RoomStatusVM




<div class="content-wrapper">
  <div class="page-header">
    <h3 class="page-title"> Chart-js </h3>
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Charts</a></li>
        <li class="breadcrumb-item active" aria-current="page">Chart-js</li>
      </ol>
    </nav>
  </div>
  <div class="row">
    <div class="col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Room Status</h4>
          <canvas id="roomStatusChart" style="height:250px !important"></canvas>
        </div>
      </div>
    </div>
    <div class=" col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Revenue by Year </h4>
          <canvas id="revenueBarChart" style="height:230px"></canvas>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Expense by Year</h4>
          <canvas id="expenseAreaChart" style="height:230px"></canvas>
        </div>
      </div>
    </div>
    <div class="col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Doughnut chart</h4>
          <canvas id="doughnutChart" style="height:250px"></canvas>
        </div>
      </div>
    </div>
  </div>


  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script>
    $(document).ready(function () {
      // Convert the RoomStatus object to JSON and output it directly into the JavaScript variable
      var roomStatus = @Html.Raw(JsonConvert.SerializeObject(ViewBag.RoomStatus));
      console.log('Room status:', roomStatus);

      var doughnutPieData = {
        datasets: [{
          data: [roomStatus.Occupied, roomStatus.Free],
          backgroundColor: [
            'rgba(255, 99, 132, 0.5)',
            'rgba(54, 162, 235, 0.5)'
          ],
          borderColor: [
            'rgba(255,99,132,1)',
            'rgba(54, 162, 235, 1)'
          ],
        }],
        labels: [
          'Occupied',
          'Free'
        ]
      };

      var doughnutPieOptions = {
        responsive: true,
        animation: {
          animateScale: true,
          animateRotate: true
        }
      };

      var ctx = document.getElementById('roomStatusChart').getContext('2d');
      var roomStatusChart = new Chart(ctx, {
        type: 'pie',
        data: doughnutPieData,
        options: doughnutPieOptions
      });
    });
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Debug: Check if the JSON data is being parsed correctly
      var revenueData = JSON.parse('@Html.Raw(ViewBag.RevenueByYearJson)');
      console.log('Revenue Data:', revenueData);

      var labels = Object.keys(revenueData);
      var data = Object.values(revenueData);

      console.log('Labels:', labels);
      console.log('Data:', data);

      var ctx = document.getElementById('revenueBarChart').getContext('2d');
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: labels,
          datasets: [{
            label: 'Revenue',
            data: data,
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
              grid: {
                color: "rgba(204, 204, 204, 0.1)"
              }
            },
            x: {
              grid: {
                color: "rgba(204, 204, 204, 0.1)"
              }
            }
          },
          plugins: {
            legend: {
              display: true
            }
          }
        }
      });
    });
    // Expense Area Chart
    var expenseData = JSON.parse('@Html.Raw(ViewBag.ExpenseByYearJson)');
    var expenseLabels = Object.keys(expenseData);
    var expenseValues = Object.values(expenseData);

    var expenseAreaChart = new Chart(document.getElementById('expenseAreaChart').getContext('2d'), {
      type: 'line',
      data: {
        labels: expenseLabels,
        datasets: [{
          label: 'Expense',
          data: expenseValues,
          backgroundColor: 'rgba(255, 99, 132, 0.2)',
          borderColor: 'rgba(255, 99, 132, 1)',
          borderWidth: 1,
          fill: true
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
            grid: {
              color: "rgba(204, 204, 204, 0.1)"
            }
          },
          x: {
            grid: {
              color: "rgba(204, 204, 204, 0.1)"
            }
          }
        },
        plugins: {
          legend: {
            display: true
          }
        }
      }
    });
  </script>